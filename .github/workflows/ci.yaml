name: CI

on: [push]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - uses: actions/checkout@v5
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: --timeout=3m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - run: make ci-test
      - uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          file: ./.test_coverage.txt

  rolling-release-image:
    # Only on master.
    if: startsWith(github.ref, 'refs/heads/master')
    env:
      TAG_IMAGE_LATEST: "true"
      VERSION: ${GITHUB_SHA}
      DOCKER_BUILDKIT: 1
    needs: [check, test]
    name: Release Rolling Release Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        run: make build-image
      - name: Docker login
        run: docker login ${DOCKER_HOST} -u ${DOCKER_USER} -p ${DOCKER_TOKEN}
        env:
          DOCKER_HOST: ""
          DOCKER_USER: bitteeinbit
          DOCKER_TOKEN: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Publish image
        run: make publish-image

  release-image:
    if: startsWith(github.ref, 'refs/tags/')
    env:
      DOCKER_BUILDKIT: 1
    needs: [check, test]
    name: Release Versioned Image
    runs-on: ubuntu-latest
    # Only run in master and when has a tag.
    steps:
      - run: echo "VERSION=${GITHUB_REF#refs/*/}" >> ${GITHUB_ENV} # Sets VERSION env var.
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        run: make build-image
      - name: Docker login
        run: docker login ${DOCKER_HOST} -u ${DOCKER_USER} -p ${DOCKER_TOKEN}
        env:
          DOCKER_HOST: ""
          DOCKER_USER: bitteeinbit
          DOCKER_TOKEN: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Publish image
        run: make publish-image
